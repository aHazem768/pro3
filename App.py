#------------------------------------------------------------------------------------------------------------------------------------
#  –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import streamlit as st
import pandas as pd
from datetime import datetime
from PIL import Image
import matplotlib.pyplot as plt
import numpy as np
import plotly.express as px
from time import sleep
import re
import os
from docx import Document
from docx.shared import Inches
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#  –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
st.title(" üìä Project Productivity Professional ")
st.markdown("---")
st.write('')
st.sidebar.title('***üìä–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüìä***')
st.sidebar.markdown("---")
image = Image.open("142.jpeg")
st.sidebar.image(image, caption='', use_column_width=True)
st.sidebar.markdown("---")
st.sidebar.title("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ")
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è—á–µ–µ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Pandas Styler
pd.set_option("styler.render.max_elements", 559776)
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
# –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
if st.sidebar.checkbox("–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"):
    selected_dashboards = st.multiselect("–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü—Ä–æ–µ–∫—Ç–∞", ["–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏"])
    show_fields = st.checkbox("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ ")
    inputs = {}  # –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    if show_fields:
        for dashboard_option in selected_dashboards:
            if dashboard_option == "–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏":
                inputs["–ù–∞–∑–≤–∞–Ω–∏–µ –ü—Ä–æ–µ–∫—Ç–∞"] = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ü—Ä–æ–µ–∫—Ç–∞", value="")
                inputs["–ê–¥—Ä–∏—Å –ü—Ä–æ–µ–∫—Ç–∞"] = st.text_input("–ê–¥—Ä–∏—Å –ü—Ä–æ–µ–∫—Ç–∞", value="")
                inputs["–í–∏–¥ —Ä–∞–±–æ—Ç"] = st.text_input("–í–∏–¥ —Ä–∞–±–æ—Ç", value="")
                inputs["–ì–µ–Ω–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫"] = st.text_input("–ì–µ–Ω–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤—â–∏–∫", value="")
                inputs["–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞"] = st.text_input("–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞", value="")
                inputs["–ó–∞–∫–∞—á–∏–∫"] = st.text_input("–ó–∞–∫–∞—á–∏–∫", value="")
                inputs["–°—Ç–∞–¥–∏—è –ø—Ä–æ–µ–∫—Ç–∞"] = st.text_input("–°—Ç–∞–¥–∏—è –ü—Ä–æ–µ–∫—Ç–∞", value="")
                inputs["–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –û–±—ä–µ–∫—Ç–∞"] = st.text_input("–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –û–±—ä–µ–∫—Ç–∞", value="")
                inputs["–ù–æ–º–µ—Ä –ì–ü–ó–£"] = st.text_input("–ù–æ–º–µ—Ä –ì–ü–ó–£", value="")
                inputs["–≠—Ç–∞–∂–Ω–æ—Å—Ç—å"] = st.text_input("–≠—Ç–∞–∂–Ω–æ—Å—Ç—å", value="")
                inputs["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ù–∞–¥–∑–µ–º–Ω—ã—Ö –≠—Ç–∞–∂–µ–π"] = st.text_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ù–∞–¥–∑–µ–º–Ω—ã—Ö –≠—Ç–∞–∂–µ–π", value="")
                inputs["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–æ–¥–∑–µ–º–Ω—ã—Ö –≠—Ç–∞–∂–µ–π"] = st.text_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ü–æ–¥–∑–µ–º–Ω—ã—Ö –≠—Ç–∞–∂–µ–π", value="")
                inputs["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π"] = st.text_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π", value="")
                inputs["–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –∑–¥–∞–Ω–∏—è m¬≤"] = st.text_input("–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –∑–¥–∞–Ω–∏—è m¬≤ ", value="")
                inputs["–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –û–±—ä–µ–º m¬≥"] = st.text_input("–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –û–±—ä–µ–º m¬≥", value="")  
                inputs["–ü–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞"] = st.text_input("–ü–ª–æ—â–∞–¥—å —É—á–∞—Å—Ç–∫–∞", value="")
                inputs["–ü–æ–ª–µ–∑–Ω–∞—è –ø–ª–æ—â–∞–¥—å"] = st.text_input("–ü–æ–ª–µ–∑–Ω–∞—è –ø–ª–æ—â–∞–¥—å", value="")
    if len(inputs) > 0:  # –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        st.write("***–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü—Ä–æ–µ–∫—Ç–∞:***")
        with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É"):
            df = pd.DataFrame(inputs.items(), columns=['–ò–º—è –∞—Ç—Ä–∏–±—É—Ç–∞', '–û–ø–∏—Å–∞–Ω–∏–µ'])
            st.table(df)   
            #  –°–æ–∑–¥–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–∞–π–ª Excel
            if st.checkbox('—Å–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel'):
                df_to_save = pd.DataFrame(inputs.items(), columns=['–ò–º—è –∞—Ç—Ä–∏–±—É—Ç–∞', '–û–ø–∏—Å–∞–Ω–∏–µ'])
                excel_file = 'project_characteristics.xlsx'
                with pd.ExcelWriter(excel_file) as writer:
                    df_to_save.to_excel(writer, index=False, sheet_name='–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ü—Ä–æ–µ–∫—Ç–∞')
                    st.markdown(f'<a href="{excel_file}" download="project_characteristics.xlsx">–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel</a>', unsafe_allow_html=True)

#-------------------------------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------------------------------------

# –ö–Ω–æ–ø–∫–∏ "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏" Ÿà "–ì—Ä–∞—Ñ–∏–∫" –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—è
st.sidebar.title("–†–∞—Å—á–µ—Ç —Ç—Ä—É–¥–æ–µ–º–∫–æ—Å—Ç–∏")
show_upload_button = st.sidebar.checkbox("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏")
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
show_dashboard = st.sidebar.checkbox("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞")
show_chart_button = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫")
# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –∂—É—Ä–Ω–∞–ª–∞
if show_upload_button:
    st.write('')
    uploaded_files = st.sidebar.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∂—É—Ä–Ω–∞–ª–∞ (Log file)", type=['log'])  # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ Log
    if uploaded_files is not None:  
        # –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ Log
        log_content = uploaded_files.readlines()

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Å—Ç—Ä–æ–∫–∏
        lines = [line.decode().strip() for line in log_content]

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ —Å—Ç—Ä–æ–∫–∏ –∏ —É–¥–∞–ª–∏—Ç–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        lines = [line.strip() for line in lines if line.strip()]

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π —á–µ—Ä—Ç—ã
        data = [line.split('|')[:2] for line in lines if '|' in line]

        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame
        df = pd.DataFrame(data, columns=['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è', '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'])
        show_upload_button = st.sidebar.checkbox("–û–±—â–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª")
        if show_upload_button:
          st.write('–û–±—â–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª')
          df
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫ –∏–º–µ–Ω–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        pattern = re.compile(r'^[–ê-–Ø–∞-—è]+\s[–ê-–Ø–∞-—è]+$|^\w+\s\w+$')  
        df = df[df['–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'].apply(lambda x: bool(pattern.match(x.strip())))]  
        
        # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤ '–î–∞—Ç–∞' –∏ '–≤—Ä–µ–º—è' –≤ –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü '–û–±—â–µ–µ –≤—Ä–µ–º—è'
        df['–û–±—â–µ–µ –≤—Ä–µ–º—è'] = pd.to_datetime(df['–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è'], errors='coerce')
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å—Ç–æ–ª–±—Ü—É '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'
        grouped_data = df.groupby('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏')
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (—Å –∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞)
        results = []
        cleaned_results = []

        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–≤–∫–ª—é—á–∞—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç)
        for name, group in grouped_data:
            # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏
            time_diffs = group['–û–±—â–µ–µ –≤—Ä–µ–º—è'].diff().fillna(pd.Timedelta(seconds=0))

            # –ò—Å–∫–ª—é—á–∞–µ–º –ø–µ—Ä–∏–æ–¥—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            time_diffs = time_diffs[time_diffs >= pd.Timedelta(seconds=0)]

            # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            total_time_seconds = time_diffs.sum().total_seconds()

            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
            days, remainder = divmod(total_time_seconds, 86400)
            hours, remainder = divmod(remainder, 3600)
            minutes, seconds = divmod(remainder, 60)

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
            formatted_time = f"{int(days)} days, {int(hours)} hours, {int(minutes)} minute, {int(seconds)} seconds"

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫
            results.append({'–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏': name, '–í—Ä–µ–º—è': formatted_time})

            # –ò—Å–∫–ª—é—á–∞–µ–º –ø–µ—Ä–∏–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ –±–æ–ª–µ–µ 30 –º–∏–Ω—É—Ç
            time_diffs = time_diffs[time_diffs <= pd.Timedelta(minutes=30)]

            # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞
            total_time_seconds = time_diffs.sum().total_seconds()

            # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ –¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
            days, remainder = divmod(total_time_seconds, 86400)
            hours, remainder = divmod(remainder, 3600)
            minutes, seconds = divmod(remainder, 60)

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
            formatted_time = f"{int(days)} days, {int(hours)} hours, {int(minutes)} minute, {int(seconds)} seconds"

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫
            cleaned_results.append({'–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏': name, '–í—Ä–µ–º—è': formatted_time})
        
        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞
        results_df = pd.DataFrame(results)
        cleaned_results_df = pd.DataFrame(cleaned_results)

        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü
        st.write('–¢—Ä—É–¥–æ–µ–º–∫–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:')
        st.write(results_df)
        st.write('–¢—Ä—É–¥–æ–µ–º–∫–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç):')
        st.write(cleaned_results_df)
        
 
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        if show_dashboard:
            st.markdown("---")
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∏–º–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            developers = cleaned_results_df['–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'].unique()

            # –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            selected_developers = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤", developers)

            # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            if selected_developers:
                filtered_data = cleaned_results_df[cleaned_results_df['–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'].isin(selected_developers)]
                for developer in selected_developers:
                    st.write(f"–°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è {developer}:")
                    st.write(filtered_data[filtered_data['–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏'] == developer])
            
#-----------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------



if show_chart_button:
    # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ç–∏–ø–∞ –¥–∏–∞–≥—Ä–∞–º–º—ã
    chart_type = st.sidebar.radio("–¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ ", ("–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞", "–¥–∏–∞–≥—Ä–∞–º–º–∞"))

    if chart_type == "–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞":
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã
        bar_data = results_df.copy()
        bar_data['–í—Ä–µ–º—è'] = pd.to_timedelta(bar_data['–í—Ä–µ–º—è']).dt.total_seconds() / 3600

        # –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç–æ–ª–±—á–∞—Ç—É—é –®—Ç–∞–±–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –û–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        fig_bar = px.bar(bar_data, x='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏', y='–í—Ä–µ–º—è', title='–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞')
        # –ü–æ–∫–∞–∑–∞—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
        st.plotly_chart(fig_bar)

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ç–æ—Ä–æ–π –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã
        cleaned_bar_data = cleaned_results_df.copy()
        cleaned_bar_data['–í—Ä–µ–º—è'] = pd.to_timedelta(cleaned_bar_data['–í—Ä–µ–º—è']).dt.total_seconds() / 3600

        # –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç–æ–ª–±—á–∞—Ç—É—é –®—Ç–∞–±–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –û–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç)
        fig_cleaned_bar = px.bar(cleaned_bar_data, x='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏', y='–í—Ä–µ–º—è', title='–≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç)')
        # –ü–æ–∫–∞–∑–∞—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É
        st.plotly_chart(fig_cleaned_bar)

    elif chart_type == "–¥–∏–∞–≥—Ä–∞–º–º–∞":
        # –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        pie_data = results_df.copy()
        pie_data['–í—Ä–µ–º—è'] = pd.to_timedelta(pie_data['–í—Ä–µ–º—è']).dt.total_seconds()

        # –°–æ–∑–¥–∞–π—Ç–µ –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –¥–ª—è –û–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        fig_pie = px.pie(pie_data, values='–í—Ä–µ–º—è', names='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏', title='–¥–∏–∞–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞')
        # –ó–∞–¥–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ –∫—Ä—É–≥–æ–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
        fig_pie.update_traces(hole=0.3)
        # –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        st.plotly_chart(fig_pie)

        # –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
        pie_cleaned_data = cleaned_results_df.copy()
        pie_cleaned_data['–í—Ä–µ–º—è'] = pd.to_timedelta(pie_cleaned_data['–í—Ä–µ–º—è']).dt.total_seconds()

        # –°–æ–∑–¥–∞–π—Ç–µ –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –¥–ª—è –û–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç)
        fig_cleaned_pie = px.pie(pie_cleaned_data, values='–í—Ä–µ–º—è', names='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏', title='–¥–∏–∞–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (–±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–¥—ã—Ö–∞ < 30 –º–∏–Ω—É—Ç)')
        # –ó–∞–¥–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤ –∫—Ä—É–≥–æ–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏
        fig_cleaned_pie.update_traces(hole=0.3)
        # –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        st.plotly_chart(fig_cleaned_pie)
              
#------------------------------------------------------------------------------------------------------------------------------------      
#------------------------------------------------------------------------------------------------------------------------------------      
#------------------------------------------------------------------------------------------------------------------------------------          

# –†–∞—Å—á–µ—Ç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤          
st.sidebar.title("–†–∞—Å—á–µ—Ç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
if st.sidebar.checkbox("—ç–ª–µ–º–µ–Ω—Ç–æ–≤"):
    uploaded_files = st.sidebar.file_uploader("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤", type=['csv'], accept_multiple_files=True, key='file_uploader', help="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã .csv")

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ —Å–ø–∏—Å–æ–∫
    if uploaded_files is not None:
        
        all_data = []
        total_sum_all_files = 0  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        
        for file in uploaded_files:
            df = pd.read_csv(file)
            # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∞–Ω–∞–ª–∏–∑–æ–º
            if '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ' not in df.columns:
                df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] = 1
            sum_values = df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum()
            total_sum_all_files += sum_values  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É
            file_name = file.name.split('.')[0]  # –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
            data = {
                '–≠–ª–µ–º–µ–Ω—Ç': [file_name],
                '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': [sum_values]
            }
            df_result = pd.DataFrame(data)
            all_data.append(df_result)
            
        # –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω—É —Ç–∞–±–ª–∏—Ü—É
        if len(all_data) > 0:
            combined_df = pd.concat(all_data, ignore_index=True)
            
            # –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–¥–∏–Ω —Ä–∞–∑
            total_df = pd.DataFrame({'–≠–ª–µ–º–µ–Ω—Ç': ['–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ'], '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ': [total_sum_all_files]})
            
            # –î–æ–±–∞–≤–∏—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –æ–±—â—É—é —Ç–∞–±–ª–∏—Ü—É
            combined_df = pd.concat([combined_df, total_df], ignore_index=True)
            
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
            st.write('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:')
            st.write(combined_df)
            
            # –î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–∞–π–ª–µ Word
            if st.button("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–∞–π–ª Word"):
                # –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª Word –∏ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–µ–≥–æ —Ç–∞–±–ª–∏—Ü—É
                document = Document()
                
               # –î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–µ—Ä—Ö–Ω—é—é —á–∞—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞
                document.add_picture('–£—Ä—Ñ—É.jpg', width=Inches(1.0), height=Inches(1.0))
                
                document.add_heading('–¢–∞–±–ª–∏—Ü–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤', level=1)

                # –î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
                table = document.add_table(rows=combined_df.shape[0]+1, cols=combined_df.shape[1])
                # –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏
                for j in range(combined_df.shape[-1]):
                    table.cell(0, j).text = combined_df.columns[j]
                # –î–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                for i in range(combined_df.shape[0]):
                    for j in range(combined_df.shape[-1]):
                        table.cell(i+1, j).text = str(combined_df.iloc[i,j])

                # –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª
                document.save('—Ç–∞–±–ª–∏—Ü–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.docx')
                st.success("–¢–∞–±–ª–∏—Ü–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ Word.")
               


                
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ "
st.sidebar.title("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ")
if st.sidebar.checkbox("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ"):
  st.sidebar.write("-  –≠—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ë—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–æ–π –Ω–æ–º–µ—Ä 32 .")
  st.sidebar.write("-  (–ì–ª–∞–≤–Ω—ã–π –∫—É—Ä–∞—Ç–æ—Ä) -–ú–∞—à–∫–∏–Ω –û–ª–µ–≥ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á ")
  st.sidebar.write("- (–¢–∏–º–ª–∏–¥) - –ë–∞–¥—Ä–∏ –•–∞–∑–µ–º –•–µ—à–∞–º –ú—É—Ö–∞–º–º–µ–¥")       
  

#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------

#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã "Renga Api"
if st.sidebar.checkbox("Renga Api"):
    st.sidebar.image("renga.png", width=80, use_column_width=False)
    st.sidebar.markdown("[–û—Ç–∫—Ä—ã—Ç—å](https://help.rengabim.com/api/)")
    

#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------


# #–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª Renga.rnp

#–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª Renga.rnp
if st.sidebar.checkbox("–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª Renga.rnp"):
    uploaded_file = st.sidebar.file_uploader("–ò–º–ø–æ—Ä—Ç —Ñ–∞–π–ª–∞ Renga", type=["rnp"])
    if uploaded_file is not None:
        # Create the 'temp' directory if it doesn't exist
        if not os.path.exists("temp"):
            os.makedirs("temp")
        
        # Save the uploaded file in the 'temp' directory
        with open(os.path.join("temp", uploaded_file.name), "wb") as f:
            f.write(uploaded_file.getbuffer())
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª
        os.startfile(os.path.join("temp", uploaded_file.name))
        st.sidebar.success("–§–∞–π–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!")



#-----------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------

#–ü–æ–º–æ—â—å
if st.sidebar.checkbox("–ü–æ–º–æ—á—å?"):
  # –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å –ø–æ–º–æ—â—å—é markdown
  st.sidebar.title("–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å:")
  st.sidebar.write("- –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∂—É—Ä–Ω–∞–ª–∞.LOG")


#-----------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------------------------------------------

